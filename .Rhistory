library(devtools)
load_all()
check()
load_all()
reprex:::reprex_addin()
ns_sites_paramwide
test()
test()
test()
load("C:/Users/ehinman/Desktop/foresiteR/historical_IR_impairedsites_delistings.Rdata")
## Add historical data files
load("inst/extdata/historical_IR_impairedsites_delistings.Rdata")
load("inst/extdata/au_wmu_22.Rdata")
names(au_wmu_22)[names(au_wmu_22)=="ASSESS_ID"] = "ASSESSMENT_UNIT_ID"
## Prep polygons and sites
asmts = readxl::read_xlsx("latest_ir_categories.xlsx", sheet = 1)
## Prep polygons and sites
asmts = readxl::read_xlsx("inst/extdata/latest_ir_categories.xlsx", sheet = 1)
params = readxl::read_xlsx("inst/extdata/latest_ir_categories.xlsx", sheet = 2) # not supporting only
params$param_year = paste0(params$PARAMETER_CODE_NAME," (",params$FIRST_LISTED_CYCLE,")")
params =params%>%select(ASSESSMENT_UNIT_ID,param_year)%>%distinct()
len = length(unique(params$param_year))+1
params_wide = params%>%pivot_wider(id_cols=c(ASSESSMENT_UNIT_ID),names_from=param_year,values_from = param_year)%>%unite(col="Impaired Parameters",2:len,sep=", ", na.rm=TRUE, remove=TRUE)
asmts_pw = merge(asmts, params_wide, all.x = TRUE)
asmts_pw$EPA_IR_CATEGORY_ID = factor(asmts_pw$EPA_IR_CATEGORY_ID, levels=c("1","2","3","4A","5"))
asmts_pw$`Impaired Parameters`[is.na(asmts_pw$`Impaired Parameters`)] = "None"
asmts_pw = merge(asmts_pw,delistings_wide, all.x = TRUE)
asmts_pw$`Delisted Parameters`[is.na(asmts_pw$`Delisted Parameters`)] = "None"
au_p = wqTools::au_poly
au_p = au_p%>%rename(ASSESSMENT_UNIT_ID=ASSESS_ID)
au_p = merge(au_p, asmts_pw, all.x = TRUE)
au_p = merge(au_p, au_wmu_22, all.x = TRUE)
factpal = colorFactor(c("#118a11","#255d8a","#a6a6a6","#984ea3","#e41a1c"),levels(au_p$EPA_IR_CATEGORY_ID))
ns_sites = ns_all%>%select(IR_MLID, IR_MLNAME,IR_Lat,IR_Long)%>%distinct()%>%group_by(IR_MLID, IR_Lat,IR_Long)%>%slice_head()
ns_sites_paramwide = ns_all%>%select(IR_MLID, IR_Lat, IR_Long, ATTAINS_PARAM_NAME, IR_Year)%>%distinct()
ns_sites_paramwide = ns_sites_paramwide%>%group_by(IR_MLID,IR_Lat,IR_Long,ATTAINS_PARAM_NAME)%>%summarise(MinYear=min(IR_Year))
ns_sites_paramwide$Parameter_Year = paste0(ns_sites_paramwide$ATTAINS_PARAM_NAME," (",ns_sites_paramwide$MinYear,")")
num = length(unique(ns_sites_paramwide$Parameter_Year))+3
ns_sites_paramwide = ns_sites_paramwide%>%pivot_wider(id_cols=c(IR_MLID,IR_Lat,IR_Long),names_from = Parameter_Year,values_from = Parameter_Year)%>%unite("Impaired Parameters",4:all_of(num),sep=", ",remove=TRUE, na.rm=TRUE)
ns_sites_paramwide = merge(ns_sites_paramwide,ns_sites, all.x = TRUE)
ns_sites_paramwide$IR_Lat=as.numeric(ns_sites_paramwide$IR_Lat)
ns_sites_paramwide$IR_Long=as.numeric(ns_sites_paramwide$IR_Long)
ns_sites_paramwide = assignAUs(ns_sites_paramwide, lat="IR_Lat", long="IR_Long")
names(ns_sites_paramwide)[names(ns_sites_paramwide)=="ASSESS_ID"] = "ASSESSMENT_UNIT_ID"
ns_sites_paramwide = merge(ns_sites_paramwide,au_wmu_22, all.x = TRUE)
save(c(ns_sites_paramwide,au_p),"asmnt_data.Rdata")
save(c(ns_sites_paramwide,au_p),file="asmnt_data.Rdata")
save(ns_sites_paramwide,au_p,file="asmnt_data.Rdata")
runApp('R')
runApp('R')
getwd()
load("inst//extdata//prev_asmnt_input.Rdata")
runApp('R')
runApp('R')
runApp('R')
document()
shiny::runApp('inst/foresiteR')
runApp('inst/foresiteR')
load(system.file("extdata", "prev_asmnt_input.Rdata", package = "dwqInsights"))
load(system.file("extdata", "prev_asmnt_input.Rdata", package = "dwqInsights"))
devtools::load_all()
library(tidyverse)
runApp('~/GitHub/4siteR')
runApp('~/GitHub/4siteR')
library(shiny)
library(shinyjs)
library(wqTools)
library(leaflet)
library(tidyverse)
library(plotly)
library(RColorBrewer)
runApp('inst/foresiteR')
load(system.file("extdata", "prev_asmnt_input.Rdata", package = "dwqInsights"))
document()
devtools::document()
warnings()
runApp('inst/foresiteR')
devtools::document()
warnings()
usethis::use_package("tidyverse")
?group_by
usethis::use_package(plotly)
usethis::use_package("plotly")
usethis::use_package("plotly")
usethis::use_package("RColorBrewer")
usethis::use_package("tidyr")
usethis::use_package("dplyr")
usethis::use_package("leaflet")
usethis::use_package("shiny")
usethis::use_package("shinyjs")
runApp('inst/foresiteR')
person("Elise","Hinman",email="ehinman@utah.gov", role=c("aut","cre"))
person("Elise","Hinman",email="ehinman@utah.gov", role=c("aut","cre"))
Authors@R:person("Elise","Hinman",email="ehinman@utah.gov", role=c("aut","cre"))
usethis::use_mit_license()
document()
devtools::document()
usethis::use_version()
devtools::document()
shiny::runApp(system.file('foresiteR', package='dwqInsights'))}
shiny::runApp(system.file('asmntDashboard', package='irTools'))
shiny::runApp(system.file('foresiteR', package='dwqInsights'))
devtools::load_all()
devtools::document()
devtools::load_all()
devtools::document()
?usethis::use_pipe
usethis::use_pipe()
devtools::document()
devtools::document()
library(irTools)
devtools::install_github("utah-dwq/irTools")
library(irTools)
?wqTools::readAttains
UT_assessments=readAttains(type="assessments", stateCode="UT", reportingCycle=2022)
UT_assessments=wqTools::readAttains(type="assessments", stateCode="UT", reportingCycle=2022)
UT_assessments$assessments_wide
write.csv(UT_assessments$assessments_wide, row.names=FALSE)
write.csv(UT_assessments$assessments_wide, file="2022_assessments_wide.csv", row.names = FALSE)
getwd()
devtools::install_github("edhinman/dwqInsights")
library(dwqInsights)
foresiteR()
foresiteR()
devtools::install_github("edhinman/dwqInsights")
usethis::use_pipe(export=FALSE)
devtools::install_github("edhinman/dwqInsights")
dwqInsights::foresiteR()
devtools::document()
devtools::test()
devtools::check()
devtools::test()
devtools::test()
rlang::last_error()
test_check("dwqInsights")
usethis::use_pipe()
devtools::document()
devtools::load_all()
foresiteR()
document()
devtools::document()
devtools::document()
